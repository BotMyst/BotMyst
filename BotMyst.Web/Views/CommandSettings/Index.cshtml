@model CommandSettingsModel

@using System.Linq
@using System.Security.Claims

<section id="commandSettings">

<div class="row user-profile">
    <div class="three columns">
        <div>
            <div class="profile-image">
                <img src="@($"https://cdn.discordapp.com/avatars/{User.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value}/{User.FindFirst(c => c.Type == "urn:discord:avatar")?.Value}.png")" alt="Avatar">
            </div>
            <div class="profile-name">
                <p>@User.FindFirst(c => c.Type == ClaimTypes.Name)?.Value</p>
            </div>
        </div>
    </div>

    <div class="eight columns">
        <div>
            <div class="profile-image">
                <img src="@($"https://cdn.discordapp.com/icons/{Model.Guild.Id}/{Model.Guild.Icon}.png")">
            </div>
            <div class="profile-name">
                <p>@Model.Guild.Name</p>
            </div>
        </div>
    </div>
</div>

<hr>

<h6 class="sub-header">@Model.CommandDescription.Name</h6>
<p class="command-summary">@Model.CommandDescription.Summary</p>

<div class="command-enabled">
    @{
        bool enabled = Model.CommandOptions.Enabled;
        string enabledClass = enabled ? "enabled" : "disabled";
        string enabledText = enabled ? "Enabled" : "Disabled";
    }

    <button class="button @enabledClass" onclick="location.href='@Url.Action("ToggleCommand", "CommandSettings", new { guildId = Model.Guild.Id, commandId = Model.CommandDescription.Id })'">@enabledText</button>
</div>

<hr>

@foreach (var cmd in Model.CommandOptionDescriptions)
{
    @if (cmd.OptionType == "ToggleAttribute")
    {
        @await Html.PartialAsync("OptionTypes/ToggleOption", new PartialOptionModel
                                                             {
                                                                Option = @cmd,
                                                                GuildId = Model.Guild.Id,
                                                                CommandId = Model.CommandDescription.Id
                                                             });
    }
    else if (cmd.OptionType == "RoleListAttribute")
    {
        @await Html.PartialAsync("OptionTypes/RoleListOption", new PartialOptionModel
                                                               {
                                                                   Option = @cmd,
                                                                   GuildId = Model.Guild.Id,
                                                                   CommandId = Model.CommandDescription.Id
                                                               });
    }
    else if (cmd.OptionType == "ChannelListAttribute")
    {
        @await Html.PartialAsync("OptionTypes/ChannelListOption", new PartialOptionModel
                                                                   {
                                                                       Option = @cmd,
                                                                       GuildId = Model.Guild.Id,
                                                                       CommandId = Model.CommandDescription.Id
                                                                   });
    }
}

<div id="RolePicker">

</div>

<div id="ChannelPicker">

</div>

</section>