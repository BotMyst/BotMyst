@model CommandSettingsModel

@using System.Linq
@using System.Security.Claims

<section id="commandSettings">

<div class="row user-profile">
    <div class="three columns">
        <div>
            <div class="profile-image">
                <img src="@($"https://cdn.discordapp.com/avatars/{User.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value}/{User.FindFirst(c => c.Type == "urn:discord:avatar")?.Value}.png")" alt="Avatar">
            </div>
            <div class="profile-name">
                <p>@User.FindFirst(c => c.Type == ClaimTypes.Name)?.Value</p>
            </div>
        </div>
    </div>

    <div class="eight columns">
        <div>
            <div class="profile-image">
                <img src="@($"https://cdn.discordapp.com/icons/{Model.Guild.Id}/{Model.Guild.Icon}.png")">
            </div>
            <div class="profile-name">
                <p>@Model.Guild.Name</p>
            </div>
        </div>
    </div>
</div>

<hr>

<h6 class="sub-header">@Model.CommandDescription.Name</h6>
<p class="command-summary">@Model.CommandDescription.Summary</p>

<div class="command-enabled">
    @if (Model.CommandOptions.Enabled)
    {
        <button class="button enabled" onclick="location.href='@Url.Action("ToggleCommand", "CommandSettings", new { guildId = Model.Guild.Id, commandId = Model.CommandDescription.Id })'">Enabled</button>
    }
    else
    {
        <button class="button disabled" onclick="location.href='@Url.Action("ToggleCommand", "CommandSettings", new { guildId = Model.Guild.Id, commandId = Model.CommandDescription.Id })'">Disabled</button>
    }
</div>

<hr>

@foreach (var cmd in Model.CommandOptionDescriptions)
{
    @if (cmd.OptionType == "ToggleAttribute")
    {
        <div class="option toggle-option">
            <p class="sub-header option-name">@cmd.Name</p>
            <p class="sub-p">@cmd.Summary</p>

            @{
                var toggleEnabled = (bool) cmd.Value ? "checked" : "";
            }

            <div>
                <label class="switch"><input type="checkbox" @toggleEnabled onchange="location.href='@Url.Action("ToggleValue", "CommandSettings", new { guildId = Model.Guild.Id, commandId = Model.CommandDescription.Id, optionName = cmd.Name, currentValue = (bool) cmd.Value})'" />    <div></div>
                </label>
            </div>
        </div>
    }
    else if (cmd.OptionType == "RoleListAttribute")
    {
        <div class="option toggle-option">
            <p class="sub-header option-name">@cmd.Name</p>
            <p class="sub-p">@cmd.Summary</p>

            @{
                var roles = Helper.GetRolesFromString (Model.Guild, (string) cmd.Value);
            }

            <div class="role-list">
                <ul>
                    @foreach (var role in roles)
                    {
                        {
                            var roleColor = Color.FromArgb (role.Color);
                        }
                        <li style="border: 1px solid rgb(roleColor.R, roleColor.G, roleColor.B)"><div class="remove"><img style="border: 1px solid rgb(roleColor.R, roleColor.G, roleColor.B)" src="img/x-icon.svg" /></div><div class="role-name">Admin</div></li>
                    }
                    @if (roles.Length == 0)
                    {
                        <li>...</li>
                    }
                </ul>

                <div class="plus">
                    +
                </div>
            </div>
        </div>

        <div style="clear:both"></div>
    }
}

<!-- <div class="popup role-popup">
    <h2 class="popup-title">Select a role</h2>
    <div class="popup-content">
        <ul>
            <li><a href="#">Admin</a></li>
            <li><a href="#">Moderator</a></li>
            <li><a href="#">Guru</a></li>
            <li><a href="#">Supporter</a></li>
            <li><a href="#">@@everyone</a></li>
        </ul>
    </div>
    <div class="popup-close">
        <a class="button">CLOSE</a>
    </div>
</div> -->

</section>